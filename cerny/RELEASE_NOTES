Release notes for Cerny.js

2.0.1 (2008-01-21)
  - Fixed issue with Profiler, the after method was corrupt.

2.0.0 (2007-12-11)
  - The following top level packages were added:
    - CERNY.ant     Scriptdefs for ant
    - CERNY.apps    Small applications
    - CERNY.event   implicit invocation
    - CERNY.http    Ajax
    - CERNY.runtime Runtime environments other than browser
  - There is a change in the handling of errors during require. A
    incomplete catalog and a non-locatable script (usually 404)
    indicate both an usage error and trigger an exception.
  - Added package CERNY.js.dependency to hold a function for listing
    the dependencies of an expression. It achieves that by
    intercepting the require calls. The overall goal is to provide a
    list of files (where the expressions are defined) in order to
    concatenate them and provide a sole script for the complete
    functionality.
  - Added package CERNY.runtime to hold scripts which setup a runtime
    environment to work with Cerny.js.
  - Added package CERNY.apps to hold applications (objects which have a
    main method with a sole argument, which is an array of strings).
  - CERNY.Dictionary.lookup has changed it's interface. It throws an
    Error now if a term is not found.
  - CERNY.require is able to resolve external dependencies declared in
    the catalog. All expressions that a third party script is
    dependant on have to precede the location of the script, separated
    by a comma.
  - CERNY.Dictionary allows to include other dictionaries. Therefore
    their path must be in the array that is assigned to the property
    'include'.
  - Due to the previous change, the catalog can be split up into
    files (e.g. one for owned scripts, one for third party scripts).
  - Added List. It offers interface like functionality and notifies
    observers of events that occurred in the list.
  - Added Observable and Revertable. They offer interface like
    functionality for observing events and changes of objects.
  - Added a http package, which offers a Request and a Response
    class. The interface is designed to avoid the word XML, put emphasis
    on HTTP, and to allow code to refer to Response explicitly.
  - Improved CERNY.clone to work on primitive types, objects, arrays
    and dates. Custom types can offer a clone method that takes no
    parameter and returns a clone of the object.
  - Modified contract checking to log CloningExceptions on storing a
    clone of object before the function call. If no old object can be
    passed after the function call execution to the post check, another
    message is logged. These messages will be logged to the current
    objects logger.
  - Fixed minor bug in CERNY.js.doc.Generator.extractFunctionDescription.
  - The PopupWindow console can be cleared now, by simply closing the
    window. The next log statement will open a new popup window.
  - Fixed bug in CERNY.console: Messages of levels WARN and INFO were
    not CSS-classified correctly and were therefore not displayed
    colored.
  - Functions added:
    - CERNY.Dictionary.evaluate
    - CERNY.util.createComparator
    - CERNY.CloningException
    - CERNY.typeOf (private)
    - Array.prototype.equals
    - Array.prototype.insertAt
    - Array.prototype.sortedInsert
  - Files added:
    - js/ant/bootstrap.js
    - js/ant/jsdoc.js
    - js/ant/mergecatalog.js
    - js/ant/mergecss.js
    - js/ant/mergejs.js
    - js/apps/GenerateDocs.js
    - js/apps/MergeCatalog.js
    - js/apps/MergeCss.js
    - js/js/dependency/dependency.js
    - js/http/Request.js
    - js/http/Response.js
    - js/event/Observable.js
    - js/event/Revertable.js
    - js/event/List.js
    - js/runtime/rhino.conf.js
    - js/runtime/rhino.js

1.4.0 (2007-05-20)
  - Added support for programming by contract by the means of
    CERNY.pre, CERNY.post, CERNY.check and
    CERNY.Interceptors.ContractChecker. Thanks to Norman Harebottle
    III for pointing out that this should be possible!
  - Added CERNY.clone for cloning object. It is implemented very
    naively and does not deserve its' name at the moment, but cloning is
    necessary for programming by contract.
  - Modified the function Array.prototype.append to accept null and
    undefined.
  - Added method CERNY.util.getUriParameterValue.
  - The TypeChecker interceptor does not check the return value on
    call, where an exception occurred anymore. This was disguising the
    real exception with a quite meaningless one.
  - Refactored lib to use anonymous functions as namespaces.
  - Changed interface to CERNY.js.doc.Generator. The constructor must
    be called with new now and is passed the source. Sorry!

1.3.1 (2007-04-04)
  - CERNY.load loads the scripts now, so that non-anonymous (global)
    functions are available in window.
  - Loggers provide now the following additional methods:
    isFatalEnabled, isErrorEnabled, isWarnEnabled, isInfoEnabled,
    isDebugEnabled, isTraceEnabled.
  - Exceptions occurring in intercepted methods are either logged as an
    ERROR or printed to the console, if the responsible logger does not
    have ERROR enabled.

1.3.0 (2007-04-01)
  - CERNY.load has a default implementation now. This means that with a
    proper CERNY.Configuration.Catalog, the dependencies can be omitted
    from the HTML page. It uses a synchronous XMLHttpRequest call to
    retrieve the necessary scripts. The DOM-based solution of inserting a
    script tag failed, because of concurrency issues.
  - CERNY.Configuration.Catalog is correct and only needs manual
    configuration of the cerny.js.path to work properly.
  - Added a root level for logging.
  - Added a console package holding consoles (An object providing a print
    method, taking one parameter a message).
  - Added the definition of XMLHttpRequest for ie6.
  - Fixed bug in CERNY.json.Printer: Curly braces in strings do not
    confuse the printer anymore and produce a proper result.
  - Files added:
    - js/console/console.js
    - js/console/DomElement.js
    - js/console/PopupWindow.js
    - css/console.css

1.2.1 (2007-03-22)
  - Improved CERNY.intercept to log information when reapplying
    interception and to log the name of the logger of the subject.
  - Added interception and signature to all scripts in CERNY.json.
  - Removed unnecessary dependency from CERNY.js.doc.Schema.
  - Corrected signature of CERNY.util.indent.

1.2.0 (2007-03-17)
  - Interceptors are passing on exceptions now and always call the
    after method.
  - In the function CERNY.intercept the passing of a customized
    interceptors array is possible.
  - Added parameter to CERNY.method to allow passing of a customized
    interceptors array. The new parameter is optional and defaults to
    CERNY.Configuration.Interceptors.active. Semantics of the function
    did not change.
  - Logging was extended to allow configuration of the layout and
    multiple appenders in CERNY.configure.
  - Corrected CERNY.js.doc.Schema.Package.path to accept empty Strings.
  - Corrected CERNY.js.doc.Schema.Library.version to be of type VersionNumber.
  - Functions added:
    - CERNY.joinFunctions
    - CERNY.signature
    - CERNY.checkType
  - Fixed bug in CERNY.util.parseUri. The meaning of the split
    function differs from IE to Firefox. In IE "dev/".split(/\//)
    yields an array of length 1. In Firefox of length 2. This caused
    the path_segments of the URLs to be wrong in IE.

1.1.0 (2007-02-19)
  - Moved configuration into a single, central configuration file
    cerny.conf.js, which must be loaded before cerny.js.
  - Introduced the interception concept to the library and adapted some
    core functions and the schema package to it.
  - Extended the signature of CERNY.schema.arrayOf to accept two
    additional parameters for checking the size of the
    array. These are optional.
  - Fixed bug in function Array.prototype.append. It works now as
    expected, appending an array to an array.
  - Fixed bug in function Array.prototype.contains. It works now as
    expected, returning whether an object is contained in an array or
    not.
  - Functions added:
    - CERNY.util.getNameFromFqName
    - CERNY.util.parseUri
  - Files added:
    - cerny.conf.js

1.0.0 (2006-11-26)
  Initial release. The library contains:
    - cerny.js
    - js/Array.js
    - js/Date.js
    - js/Number.js
    - js/String.js
    - js/doc/Generator.js
    - js/doc/Schema.js
    - json/HtmlPrettyPrinter.js
    - json/Printer.js
    - json/TextPrettyPrinter.js
    - schema/schema.js
    - util/util.js
