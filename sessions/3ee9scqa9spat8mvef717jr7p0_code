
/* Parse dates. */
var dateFormat = pv.Format.date("%d-%b-%y");
data.forEach(function(d) { d.date = dateFormat.parse(d.date) });

/* Scales. */
var w = 840,
    h = 200,
    x = pv.Scale.linear(data, function(d) { return  d.date;}).range(0, w),
    y = pv.Scale.linear(data, function(d) { return  d.low;}, function(d) {return  d.high;}).range(0, h).nice();
 
var vis = new pv.Panel()
    .width(w)
    .height(h)
    .margin(10)
    .left(30);
 
/* Dates. */
vis.add(pv.Rule)
     .data(x.ticks())
     .left(x)
     .strokeStyle("#eee")
   .anchor("bottom").add(pv.Label)
     .text(x.tickFormat);
 
/* Prices. */
vis.add(pv.Rule)
     .data(y.ticks(7))
     .bottom(y)
     .left(-10)
     .right(-10)
     .strokeStyle(function(d) { return  d % 10 ? "#ccc" : "#333";})
   .anchor("left").add(pv.Label)
     .textStyle(function(d) { return  d % 10 ? "#999" : "#333";})
     .text(y.tickFormat);
 
/* Candlestick. */
var view = vis.add(pv.Rule)
    .data(data)
    .left(function(d) { return  x(d.date);})
    .bottom(function(d) { return  y(Math.min(d.high, d.low));})
    .height(function(d) { return  Math.abs(y(d.high) - y(d.low));})
    .strokeStyle(function(d) { return  d.open < d.close ? "#ae1325" :"#06982d";})
  .add(pv.Rule)
    .bottom(function(d) { return  y(Math.min(d.open, d.close));})
    .height(function(d) { return  Math.abs(y(d.open) - y(d.close));})
    .lineWidth(10);
 
vis.render();
 

